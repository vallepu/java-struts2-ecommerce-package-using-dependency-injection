package org.webhop.ywdc.tools;


import java.util.HashMap;


public class ErrorCodes 
{
	public HashMap<Integer, ErrorCode> errorMap;
	
	public ErrorCodes()
	{
		ErrorCode error1 = new ErrorCode(false, 10002, "Authentication/Authorization Failed", "Username/Password is incorrect", "This error can be caused by an incorrect API username, an incorrect API password, or an invalid API signature. Make sure that all three of these values are correct. For your security, PayPal does not report exactly which of these three values might be in error. ");
		ErrorCode error2 = new ErrorCode(false, 10006, "Version Error", "Version is not supported", "");
		ErrorCode error3 = new ErrorCode(false, 10008, "Security Error", "Security header is not valid ", "");
		ErrorCode error4 = new ErrorCode(false, 10101, "This API Temporarily Unavailable", "This API is temporarily unavailable. Please try later. ", "");
		ErrorCode error5 = new ErrorCode(false, 81000, "Missing Parameter", "Required Parameter Missing : Unable to identify parameter", "");
		ErrorCode error6 = new ErrorCode(false, 81001, "Invalid Parameter", "A Parameter is invalid: Unable to identify parameter", "");
		ErrorCode error7 = new ErrorCode(false, 81002, "Unspecified Method", "Method Specified is not Supported", "");
		ErrorCode error8 = new ErrorCode(false, 81003, "Unspecified Method", "No Method Specified", "");
		ErrorCode error9 = new ErrorCode(false, 81004, "Unspecified Method", "No Request Received", "");
		ErrorCode error10 = new ErrorCode(false, 81100, "Missing Parameter", "OrderTotal(Amt):Required parameter missing", "");
		ErrorCode error11 = new ErrorCode(false, 81101, "Missing Parameter", "MaxAmt:Required parameter missing.", "");
		ErrorCode error12 = new ErrorCode(false, 81102, "Missing Parameter", "ReturnURL:Required parameter missing", "");
		ErrorCode error13 = new ErrorCode(false, 81103, "Missing Parameter", "NotifyURL:Required parameter missing", "");
		ErrorCode error14 = new ErrorCode(false, 81104, "Missing Parameter", "CancelURL:Required parameter missing", "");
		ErrorCode error15 = new ErrorCode(true,  81105, "Missing Parameter", "ShipToStreet:Required parameter missing", "");
		ErrorCode error16 = new ErrorCode(true,  81106, "Missing Parameter", "ShipToStreet2:Required parameter missing", "");
		ErrorCode error17 = new ErrorCode(true,  81107, "Missing Parameter", "ShipToCity:Required parameter missing", "");
		ErrorCode error18 = new ErrorCode(true,  81108, "Missing Parameter", "ShipToState:Required parameter missing", "");
		ErrorCode error19 = new ErrorCode(true,  81109, "Missing Parameter", "ShiptToZip:Required parameter missing", "");
		ErrorCode error20 = new ErrorCode(true,  81110, "Missing Parameter", "Country:Required parameter missing", "");
		ErrorCode error21 = new ErrorCode(false, 81111, "Missing Parameter", "ReqConfirmShipping: Required parameter missing", "");
		ErrorCode error22 = new ErrorCode(false, 81112, "Missing Parameter", "NoShipping:Required parameter missing", "");
		ErrorCode error23 = new ErrorCode(false, 81113, "Missing Parameter", "AddOverride:Required parameter missing", "");
		ErrorCode error24 = new ErrorCode(false, 81114, "Missing Parameter", "LocaleCode:Required parameter missing", "");
		ErrorCode error25 = new ErrorCode(false, 81115, "Missing Parameter", "PaymentAction: Required parameter missing", "");
		ErrorCode error26 = new ErrorCode(true,  81116, "Missing Parameter", "Email:Required parameter missing", "");
		ErrorCode error27 = new ErrorCode(false, 81117, "Missing Parameter", "Token:Required parameter missing", "");
		ErrorCode error28 = new ErrorCode(false, 81118, "Missing Parameter", "PayerID:Required parameter missing", "");
		ErrorCode error29 = new ErrorCode(false, 81119, "Missing Parameter", "ItemAmt:Required parameter missing", "");
		ErrorCode error30 = new ErrorCode(false, 81120, "Missing Parameter", "ShippingAmt:Required parameter missing", "");
		ErrorCode error31 = new ErrorCode(false, 81121, "Missing Parameter", "HandlingAmt:Required parameter missing", "");
		ErrorCode error32 = new ErrorCode(false, 81122, "Missing Parameter", "TaxAmt:Required parameter missing", "");
		ErrorCode error33 = new ErrorCode(false, 81123, "Missing Parameter", "IPAddress:Required parameter missing", "");
		ErrorCode error34 = new ErrorCode(true,  81124, "Missing Parameter", "ShipToName:Required parameter missing", "");
		ErrorCode error35 = new ErrorCode(false, 81125, "Missing Parameter", "L_Amt:Required parameter missing", "");
		ErrorCode error36 = new ErrorCode(true,  81126, "Missing Parameter", "Amt:Required parameter missing", "");
		ErrorCode error37 = new ErrorCode(false, 81127, "Missing Parameter", "L_TaxAmt:Required parameter missing", "");
		ErrorCode error38 = new ErrorCode(false, 81128, "Missing Parameter", "AuthorizationID: Required parameter missing", "");
		ErrorCode error39 = new ErrorCode(false, 81129, "Missing Parameter", "CompleteType:Required parameter missing", "");
		ErrorCode error40 = new ErrorCode(false, 81130, "Missing Parameter", "CurrencyCode:Required parameter missing", "");
		ErrorCode error41 = new ErrorCode(false, 81131, "Missing Parameter", "TransactionID:Required parameter missing", "");
		ErrorCode error42 = new ErrorCode(false, 81132, "Missing Parameter", "TransactionEntity:Required parameter missing", "");
		ErrorCode error43 = new ErrorCode(true, 81133, "Missing Parameter", "Acct:Required parameter missing", "");
		ErrorCode error44 = new ErrorCode(false, 81134, "Missing Parameter", "ExpDate:Required parameter missing", "");
		ErrorCode error45 = new ErrorCode(false, 81135, "Missing Parameter", "Firstname:Requierd parameter missing", "");
		ErrorCode error46 = new ErrorCode(false, 81136, "Missing Parameter", "LastName:Required parameter missing", "");
		ErrorCode error47 = new ErrorCode(false, 81137, "Missing Parameter", "Street:Required parameter missing", "");
		ErrorCode error48 = new ErrorCode(false, 81138, "Missing Parameter", "Street2:Required parameter missing", "");
		ErrorCode error49 = new ErrorCode(false, 81139, "Missing Parameter", "City:Required parameter missing", "");
		ErrorCode error50 = new ErrorCode(false, 81140, "Missing Parameter", "State:Required parameter missing", "");
		ErrorCode error51 = new ErrorCode(false, 81141, "Missing parameter", "Zip: Required parameter missing", "");
		ErrorCode error52 = new ErrorCode(false, 81142, "Missing Parameter", "CountryCode:Required parameter missing", "");
		ErrorCode error53 = new ErrorCode(false, 81143, "Missing Parameter", "RefundType:Required parameter missing", "");
		ErrorCode error54 = new ErrorCode(false, 81144, "Missing Parameter", "StartDate:Required parameter missing", "");
		ErrorCode error55 = new ErrorCode(false, 81145, "Missing Parameter", "EndDate:Required parameter missing", "");
		ErrorCode error56 = new ErrorCode(false, 81146, "Missing Parameter", "MPID:Required parameter missing", "");
		ErrorCode error57 = new ErrorCode(false, 81147, "Missing Parameter", "CreditCardType: Required parameter missing", "");
		ErrorCode error58 = new ErrorCode(false, 81148, "Missing Parameter", "User:Required parameter missing", "");
		ErrorCode error59 = new ErrorCode(false, 81149, "Missing Parameter", "Pwd:Required parameter missing", "");
		ErrorCode error60 = new ErrorCode(false, 81150, "Missing Parameter", "Version:Required parameter missing", "");
		ErrorCode error61 = new ErrorCode(false, 81200, "Missing Parameter", "Amt:Invalid parameter", "");
		ErrorCode error62 = new ErrorCode(false, 81201, "Invalid Parameter", "MaxAmt:Invalid parameter", "");
		ErrorCode error63 = new ErrorCode(false, 81203, "Invalid Parameter", "NotifyURL:Invalid parameter", "");
		ErrorCode error64 = new ErrorCode(false, 81205, "Invalid Parameter", "ShipToStreet:Invalid parameter", "");
		ErrorCode error65 = new ErrorCode(false, 81206, "Invalid Parameter", "ShipToStreet2:Invalid parameter", "");
		ErrorCode error66 = new ErrorCode(false, 81207, "Invalid Parameter", "ShipToCity:Invalid parameter", "");
		ErrorCode error67 = new ErrorCode(false, 81208, "Invalid Parameter", "ShipToState:Invalid parameter", "");
		ErrorCode error68 = new ErrorCode(false, 81209, "Invalid Parameter", "ShipToZip:Invalid parameter", "");
		ErrorCode error69 = new ErrorCode(false, 81210, "Invalid Parameter", "Country:Invalid parameter", "");
		ErrorCode error70 = new ErrorCode(false, 81211, "Invalid Parameter", "ReqConfirmShipping:Invalid parameter", "");
		ErrorCode error71 = new ErrorCode(false, 81212, "Invalid Parameter", "NoShipping:Invalid parameter", "");
		ErrorCode error72 = new ErrorCode(false, 81213, "Invalid Parameter", "AddrOverride:Invalid parameter", "");
		ErrorCode error73 = new ErrorCode(false, 81214, "Invalid Parameter", "LocalCode:Invalid parameter", "");
		ErrorCode error74 = new ErrorCode(false, 81215, "Invalid Parameter", "PaymentAction:Invalid parameter", "");
		ErrorCode error75 = new ErrorCode(false, 81219, "Invalid Parameter", "ItemAmt:Invalid parameter", "");
		ErrorCode error76 = new ErrorCode(false, 81221, "Invalid Parameter", "HandlingTotal Amt:Invalid parameter", "");
		ErrorCode error77 = new ErrorCode(false, 81222, "Invalid Parameter", "TaxAmt:Invalid parameter", "");
		ErrorCode error78 = new ErrorCode(false, 81223, "Invalid Parameter", "IPAddress:Invalid parameter", "");
		ErrorCode error79 = new ErrorCode(false, 81224, "Invalid Parameter", "ShipToName:Invalid parameter", "");
		ErrorCode error80 = new ErrorCode(false, 81225, "Invalid Parameter", "L_Amt:Invalid parameter", "");
		ErrorCode error81 = new ErrorCode(false, 81226, "Invalid Parameter", "Amt:Invalid parameter", "");
		ErrorCode error82 = new ErrorCode(false, 81227, "Invalid Parameter", "L_TaxAmt:Invalid parameter", "");
		ErrorCode error83 = new ErrorCode(false, 81229, "Invalid Parameter", "CompleteType:Invalid parameter", "");
		ErrorCode error84 = new ErrorCode(false, 81230, "Invalid Parameter", "CurrencyCode:Invalid parameter", "");
		ErrorCode error85 = new ErrorCode(false, 81232, "Invalid Parameter", "TransactionEntity:Invalid parameter", "");
		ErrorCode error86 = new ErrorCode(false, 81234, "Invalid Parameter", "ExpDate:Invalid parameter", "");
		ErrorCode error87 = new ErrorCode(false, 81235, "Invalid Parameter", "FirstName:Invalid parameter", "");
		ErrorCode error88 = new ErrorCode(false, 81236, "Invalid Parameter", "Lastname:Invalid paramter", "");
		ErrorCode error89 = new ErrorCode(false, 81237, "Invalid Parameter", "Street:Invalid parameter", "");
		ErrorCode error90 = new ErrorCode(false, 81238, "Invalid Parameter", "Stree2:Invalid parameter", "");
		ErrorCode error91 = new ErrorCode(false, 81239, "Invalid Parameter", "City:Invalid parameter", "");
		ErrorCode error92 = new ErrorCode(false, 81243, "Invalid Parameter", "RefundType:Invalid parameter", "");
		ErrorCode error93 = new ErrorCode(false, 81244, "Invalid Parameter", "StartDate:Invalid parameter", "");
		ErrorCode error94 = new ErrorCode(false, 81245, "Invalid Parameter", "EndDate:Invalid parameter", "");
		ErrorCode error95 = new ErrorCode(false, 81247, "Invalid Parameter", "CreditCardType:Invalid parameter", "");
		ErrorCode error96 = new ErrorCode(false, 81248, "Invalid Parameter", "Username:Invalid parameter", "");
		ErrorCode error97 = new ErrorCode(false, 81249, "Invalid Parameter", "Password:Invalid parameter", "");
		ErrorCode error98 = new ErrorCode(false, 81250, "Invalid Parameter", "Version:Invalid parameter", "");
		ErrorCode error99 = new ErrorCode(false, 81251, "Invalid Parameter", "Internal Service Error", "");
		ErrorCode error100 = new ErrorCode(false, 99998, "Transaction refused because of an invalid argument. See additional error messages for details", "Currency is not supported", "");
		
		HashMap<Integer, ErrorCode> errorMap = new HashMap<Integer, ErrorCode>();
		errorMap.put(10002, error1);
		errorMap.put(10006, error2);
		errorMap.put(10008, error3);
		errorMap.put(10101, error4);
		errorMap.put(81000, error5);
		errorMap.put(81001, error6);
		errorMap.put(81002, error7);
		errorMap.put(81003, error8);
		errorMap.put(81004, error9);
		errorMap.put(81100, error10);
		errorMap.put(81101, error11);
		errorMap.put(81102, error12);
		errorMap.put(81103, error13);
		errorMap.put(81104, error14);
		errorMap.put(81105, error15);
		errorMap.put(81106, error16);
		errorMap.put(81107, error17);
		errorMap.put(81108, error18);
		errorMap.put(81109, error19);
		errorMap.put(81110, error20);
		errorMap.put(81111, error21);
		errorMap.put(81112, error22);
		errorMap.put(81113, error23);
		errorMap.put(81114, error24);
		errorMap.put(81115, error25);
		errorMap.put(81116, error26);
		errorMap.put(81117, error27);
		errorMap.put(81118, error28);
		errorMap.put(81119, error29);
		errorMap.put(81120, error30);
		errorMap.put(81121, error31);
		errorMap.put(81122, error32);
		errorMap.put(81123, error33);
		errorMap.put(81124, error34);
		errorMap.put(81125, error35);
		errorMap.put(81126, error36);
		errorMap.put(81127, error37);
		errorMap.put(81128, error38);
		errorMap.put(81129, error39);
		errorMap.put(81130, error40);
		errorMap.put(81131, error41);
		errorMap.put(81132, error42);
		errorMap.put(81133, error43);
		errorMap.put(81134, error44);
		errorMap.put(81135, error45);
		errorMap.put(81136, error46);
		errorMap.put(81137, error47);
		errorMap.put(81138, error48);
		errorMap.put(81139, error49);
		errorMap.put(81140, error50);
		errorMap.put(81141, error51);
		errorMap.put(81142, error52);
		errorMap.put(81143, error53);
		errorMap.put(81144, error54);
		errorMap.put(81145, error55);
		errorMap.put(81146, error56);
		errorMap.put(81147, error57);
		errorMap.put(81148, error58);
		errorMap.put(81149, error59);
		errorMap.put(81150, error60);
		errorMap.put(81200, error61);
		errorMap.put(81201, error62);
		errorMap.put(81203, error63);
		errorMap.put(81205, error64);
		errorMap.put(81206, error65);
		errorMap.put(81207, error66);
		errorMap.put(81208, error67);
		errorMap.put(81209, error68);
		errorMap.put(81210, error69);
		errorMap.put(81211, error70);
		errorMap.put(81212, error71);
		errorMap.put(81213, error72);
		errorMap.put(81214, error73);
		errorMap.put(81215, error74);
		errorMap.put(81219, error75);
		errorMap.put(81221, error76);
		errorMap.put(81222, error77);
		errorMap.put(81223, error78);
		errorMap.put(81224, error79);
		errorMap.put(81225, error80);
		errorMap.put(81226, error81);
		errorMap.put(81227, error82);
		errorMap.put(81229, error83);
		errorMap.put(81230, error84);
		errorMap.put(81232, error85);
		errorMap.put(81234, error86);
		errorMap.put(81235, error87);
		errorMap.put(81236, error88);
		errorMap.put(81237, error89);
		errorMap.put(81238, error90);
		errorMap.put(81239, error91);
		errorMap.put(81243, error92);
		errorMap.put(81244, error93);
		errorMap.put(81245, error94);
		errorMap.put(81247, error95);
		errorMap.put(81248, error96);
		errorMap.put(81249, error97);
		errorMap.put(81250, error98);
		errorMap.put(81251, error99);
		errorMap.put(99998, error100);
		setErrorMap(errorMap);
	}
	public HashMap<Integer, ErrorCode> getErrorMap() {
		return errorMap;
	}

	public void setErrorMap(HashMap<Integer, ErrorCode> errorMap) {
		this.errorMap = errorMap;
	}

}
